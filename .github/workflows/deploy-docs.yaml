name: Deploy API Docs

on:
  # Run workflow after PR is closed.
  pull_request:
    types:
      - closed
    paths:
      - 'docs/**'
      - 'examples/**'
  # If conflict or errors occured, can retry build manually.
  workflow_dispatch:

jobs:
  build:
    name: build docusarus
    runs-on: ubuntu-latest
    env:
      base_branch: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.base_branch }}
      # Setup Node
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      # Setup Yarn
      - name: Setup Yarn
        run: npm install -g yarn
      # Setup Node with yarn cache
      - name: Setup Yarn Cache
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: yarn.lock
      # Setup yarn dependencies
      - name: Setup Yarn Dependencies
        run: yarn
      # Generate, build, and copy to files/build for deployment
      - run: yarn deploy-go
      # Add and commit build folder ignoring .gitignore
      # Alternatives: can use commit/PR name for the message to know the source of the build.
      - name: Set Build Branch Name
        id: param
        run: |
          echo "current_date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "title=[Client] Update Docusaurus Build $(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "build_branch=docusaurus-build-$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - uses: EndBug/add-and-commit@v9
        with:
          add: -f files/build
          message: '${{ steps.param.outputs.title }}'
          new_branch: ${{ steps.param.outputs.build_branch }}
          pull: --rebase --autostash origin main
          push: origin ${{ steps.param.outputs.build_branch }} --set-upstream --force
      # - name: Create commits
      #   run: |
      #     git fetch --tags --force
      #     git pull --rebase --autostash origin main
      #     git add -f files/build
      #     git commit -m '${{ steps.param.outputs.title }}'
      # - name: Create Pull Request
      #   uses: peter-evans/create-pull-request@v4
      #   with:
      #     branch: ${{ steps.param.outputs.build_branch }}
      #     base: ${{ env.base_branch }}
      #     title: '${{ steps.param.outputs.title }}'
      #     body: |
      #       Source: ${{ env.base_branch }}
      - name: Create Pull Request
        uses: docker://ghcr.io/repo-sync/pull-request:v2
        with:
          source_branch: ${{ steps.param.outputs.build_branch }}
          destination_branch: main
          pr_title: '${{ steps.param.outputs.title }}'
          pr_body: |
            Source: ${{ env.base_branch }}
            CreatedAt: ${{ steps.param.outputs.current_date }}


